name: Pylint Changed Files and Cache Dependencies

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed_files
        uses: tj-actions/changed-files@v44

      - name: Log changed files
        run: |
          echo "Changed files:"
          echo "${{ steps.changed_files.outputs.all_changed_files }}"

      - name: Cache dependencies
        uses: actions/cache@v3
        id: cache-dependencies
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Log cache status
        run: |
          echo "Cache hit: ${{ steps.cache-dependencies.outputs.cache-hit }}"

      - if: ${{ steps.cache-dependencies.outputs.cache-hit != 'true' }}
        name: List the state of the pip cache
        continue-on-error: true
        run: |
          echo "Pip cache contents:"
          ls -l ~/.cache/pip

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Log Python version
        run: |
          echo "Python version:"
          python --version

      - name: Install dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt pylint

      - name: Verify Pylint installation
        run: |
          echo "Pylint version:"
          pylint --version

      - name: Run Pylint
        # Comment out the next line to run Pylint on all files
        # if: steps.changed_files.outputs.any_changed == 'true'
        run: |
          echo "Running Pylint on changed files..."
          echo "${{ steps.changed_files.outputs.all_changed_files }}" | tr ' ' '\n' | grep -E '\.py$' | xargs pylint || (echo "Pylint found errors!" && exit 1)
